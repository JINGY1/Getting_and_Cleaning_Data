# Project description:
The experiments have been carried out with a group of 30 volunteers within an age bracket of 19-48 years. Each person performed six activities (WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING) wearing a smartphone (Samsung Galaxy S II) on the waist. Using its embedded accelerometer and gyroscope, we captured 3-axial linear acceleration and 3-axial angular velocity at a constant rate of 50Hz. The experiments have been video-recorded to label the data manually. The obtained dataset has been randomly partitioned into two sets, where 70% of the volunteers was selected for generating the training data and 30% the test data. 

The sensor signals (accelerometer and gyroscope) were pre-processed by applying noise filters and then sampled in fixed-width sliding windows of 2.56 sec and 50% overlap (128 readings/window). The sensor acceleration signal, which has gravitational and body motion components, was separated using a Butterworth low-pass filter into body acceleration and gravity. The gravitational force is assumed to have only low frequency components, therefore a filter with 0.3 Hz cutoff frequency was used. From each window, a vector of features was obtained by calculating variables from the time and frequency domain. See 'features_info.txt' for more details. 



# get your current path directory
getwd() 
# path of datasets
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip" 
# download the datasets
download.file(fileurl, file.path(path, "Course_Proj_Data.zip"))
# unzip the datastes
unzip(zipfile="Course_Proj_Data.zip")


# load data
library(data.table)
filepath <- paste(path,"/UCI HAR Dataset", sep='')
# "activity_labels.txt" : 6 rows, 2 columns (Links the class labels with their activity name, such as WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING)
activity_label <- fread(file.path(filepath,"activity_labels.txt"), col.names=c("label","activity"))
# "features.txt" : 561 rows, 2 columns (List of all features)
features <- fread(file.path(filepath,"features.txt"), col.names=c("id","feature_nm")) # feature_nm = feature name
# Extracts only the measurements on the mean and standard deviation for each measurement.
features_filter <- grep("(mean|std)\\(\\)", features[, feature_nm])
measurements <- features[features_filter, feature_nm] 
# Remove () for column feature_nm
measurements <- gsub('[()]', '', measurements)


# load train datasets
# train: 7352 rows, 66 columns (Training set)
train <- fread(file.path(filepath, "train/X_train.txt"))[, features_filter, with = FALSE] 
data.table::setnames(train, colnames(train), measurements)
# train_activity: 7352 rows, 1 column (Training labels)
train_activity <- fread(file.path(filepath, "train/Y_train.txt"), col.names = c("activity"))
# train_subject: 7352 rows, 1 column (Each row identifies the subject who performed the activity for each window sample. Its range is from 1 to 30)
train_subject <- fread(file.path(filepath, "train/subject_train.txt"), col.names = c("subject_id"))
# train_data: 7352 rows, 68 columns
train_data <- cbind(train_subject, train_activity, train)


# load test datasets
# test: 2947 rows, 66 columns (Test set)
test <- fread(file.path(filepath, "test/X_test.txt"))[, features_filter, with = FALSE]
data.table::setnames(test, colnames(test), measurements)
# test_activity: 2947 rows, 1 column (Test labels)
test_activity <- fread(file.path(filepath, "test/Y_test.txt"), col.names = c("activity"))
# test_subject: 2947 rows, 1 column
test_subject <- fread(file.path(filepath, "test/subject_test.txt"), col.names = c("subject_id"))
# test_data: 2947 rows, 68 columns
test_data <- cbind(test_subject, test_activity, test)


# merge
# Merges the training and the test sets to create one data set.
merge_data <- rbind(train_data, test_data) 
# Set activity as Factor w/ 6 levels "WALKING","WALKING_UPSTAIRS",.. 
merge_data[["activity"]] <- factor(merge_data[, activity], levels = activity_label[["label"]], labels = activity_label[["activity"]])
# Set subject_id as Factor w/ 30 levels "1","2","3","4",..
merge_data[["subject_id"]] <- as.factor(merge_data[, subject_id])
# Reshape data
merge_data <- reshape2::melt(data = merge_data, id = c("subject_id", "activity"))
merge_data <- reshape2::dcast(data = merge_data, subject_id + activity ~ variable, fun.aggregate = mean)

# create new datasets named "tidy_data.txt"
data.table::fwrite(x = merge_data, file = "tidy_data.txt", quote = FALSE)
